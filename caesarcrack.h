/*
 *  main.h
 *  caesarcrack
 *
 *  Created by Sean Nicholls on 30/09/2009.
 *  Copyright 2009 __MyCompanyName__. All rights reserved.
 *
 */

#include <iostream>
#include <stdio.h>

float countCharFrequency( char c, char* str );
char* tolowerCharArray( char* str ) ;
char* toupperCharArray( char* str ) ;
char* shiftAlphabet( char* str, int offset );
int computeShiftRegister( char* cipher, char* alpha, float* langfreq );
char* decodeCipher( char* cipher, char* alpha, int offset );
float getCharFrequencyChiSum( char* alpha, char* cipher, float* langfreq );
char* substr( char* str, int start, int end );

int ae_load_file_to_memory(const char *filename, char **result)
{
	int size = 0;
	FILE *f = fopen(filename, "rb");
	if (f == NULL) 
	{
		*result = NULL;
		return -1; // -1 means file opening fail
	}
	fseek(f, 0, SEEK_END);
	size = ftell(f);
	fseek(f, 0, SEEK_SET);
	*result = (char *)malloc(size+1);
	if (size != fread(*result, sizeof(char), size, f))
	{
		free(*result);
		return -2; // -2 means file reading fail
	}
	fclose(f);
	(*result)[size] = 0;
	return size;
}